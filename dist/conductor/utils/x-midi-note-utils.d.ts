import { IKey } from "../interface/utils.interface";
/**
 * MIDIノート操作ユーティリティ
 *
 * MIDIノート番号と音楽記譜法の音名との変換に関するユーティリティ関数を提供する
 * チューニング設定からMIDIノート番号への変換機能を含む
 *
 * このモジュールは、ギターのチューニング設定をMIDIノート番号に変換し、
 * 実際の演奏データの生成に必要な音高情報を提供する
 */
/**
 * チューニング設定から各弦の開始MIDIノート番号を取得
 *
 * ギターのチューニング設定（例：EADGBE）をMIDIノート番号の配列に変換する
 * 各弦の開放弦のMIDIノート番号を計算して返す
 *
 * 処理の流れ：
 * 1. 各弦の標準的な音名とMIDIノート番号のマッピングを定義
 * 2. 指定されたチューニングの各音名を12音階での位置に変換
 * 3. 基準音からの半音の差を計算してMIDIノート番号を算出
 * 4. 6弦から1弦の順序でMIDIノート番号の配列を返す
 *
 * 例：通常のチューニング E|A|D|G|B|E の場合、[40, 45, 50, 55, 59, 64] を返す
 * （6弦から1弦の順序、MIDIノート番号は中央C=60を基準とする）
 *
 * @param tuning チューニング設定の配列（6弦から1弦の順序）
 * @returns 各弦のMIDIノート番号の配列（6弦から1弦の順序）
 *
 * @example
 * tuningToStringPitch(['E', 'A', 'D', 'G', 'B', 'E']) // [40, 45, 50, 55, 59, 64]
 * tuningToStringPitch(['D', 'G', 'C', 'F', 'A', 'D']) // [38, 43, 48, 53, 57, 62] (ドロップDチューニング)
 */
export declare function tuningToStringPitch(tuning: IKey[]): number[];
